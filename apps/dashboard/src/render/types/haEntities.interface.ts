// Generated by https://quicktype.io

export interface HaEntities {
    "person.raik":                                                                                   PersonRaik;
    "sun.sun":                                                                                       SunSun;
    "sensor.connected_clients":                                                                      SensorConnectedClients;
    "input_boolean.movie_mode":                                                                      InputBooleanMovieMode;
    "zone.home":                                                                                     ZoneHome;
    "light.plantlight_banana":                                                                       FanHumidifier;
    "light.plantlight_monstera":                                                                     FanHumidifier;
    "binary_sensor.updater":                                                                         BinarySensorUpdater;
    "media_player.apple_tv":                                                                         MediaPlayerAppleTv;
    "automation.morning_plantlight_routine":                                                         Script;
    "automation.plantlights_evening_routine":                                                        Script;
    "automation.evening_routine":                                                                    Script;
    "remote.living_room":                                                                            RemoteLivingRoom;
    "switch.bf93fb91bf84f30c04a0iv":                                                                 Switch;
    "switch.bf76b910a45052add2g9kl":                                                                 Switch;
    "switch.bf90d60f48f4ddc915lpmg":                                                                 Switch;
    "switch.bfd3b91b6b1f6383ac2bo7":                                                                 Switch;
    "weather.home":                                                                                  WeatherHome;
    "script.shortcut_start_morning":                                                                 Script;
    "script.shortcut_evening_mode":                                                                  Script;
    "script.shortcut_night_mode":                                                                    Script;
    "script.shortcut_leave_home":                                                                    Script;
    "script.shortcut_back_home":                                                                     Script;
    "script.shortcut_movie_mode":                                                                    Script;
    "script.shortcut_plant_lights":                                                                  Script;
    "script.turn_on_projector":                                                                      Script;
    "script.turn_off_projector":                                                                     Script;
    "script.turn_on_apple_tv":                                                                       Script;
    "script.shortcut_cleanup":                                                                       Script;
    "script.shortcut_shower_mode":                                                                   Script;
    "media_player.master_bathroom":                                                                  MediaPlayer;
    "media_player.lounge":                                                                           MediaPlayer;
    "media_player.dining_room":                                                                      MediaPlayer;
    "media_player.bathroom":                                                                         MediaPlayerBathroom;
    "sensor.hacs":                                                                                   SensorHacsClass;
    "fan.humidifier":                                                                                FanHumidifier;
    "vacuum.roborock_vacuum_s5e":                                                                    FanHumidifier;
    "sensor.linksys22030_b_sent":                                                                    SensorLinksys;
    "sensor.linksys22030_packets_received":                                                          SensorLinksys;
    "sensor.linksys22030_packets_sent":                                                              SensorLinksys;
    "sensor.linksys22030_kib_s_received":                                                            SensorLinksys;
    "sensor.linksys22030_kib_s_sent":                                                                SensorLinksys;
    "sensor.linksys22030_packets_s_received":                                                        SensorLinksys;
    "sensor.linksys22030_packets_s_sent":                                                            SensorLinksys;
    "sensor.linksys22030_b_received":                                                                SensorLinksys;
    "switch.plant_led":                                                                              RemoteBroadlinkRm3ProRemote;
    "remote.broadlink_rm3_pro_remote":                                                               RemoteBroadlinkRm3ProRemote;
    "switch.movie_mode":                                                                             RemoteBroadlinkRm3ProRemote;
    "light.gateway_light":                                                                           BinarySensorGatewayMotionSensor;
    "binary_sensor.gateway_motion_sensor":                                                           BinarySensorGatewayMotionSensor;
    "humidifier.mi_smart_antibacterial_humidifier_humidifier":                                       HumidifierMiSmartAntibacterialHumidifierHumidifier;
    "binary_sensor.door_and_window_sensor_magnet_sensor":                                            BinarySensorSensor;
    "binary_sensor.master_bathroom_door_magnet_sensor":                                              BinarySensorSensor;
    "binary_sensor.rooftop_door_magnet_sensor":                                                      BinarySensorSensor;
    "binary_sensor.freddys_room_window_door_magnet_sensor":                                          BinarySensorSensor;
    "binary_sensor.motion_sensor_floor_downstairs_motion_sensor":                                    BinarySensorSensor;
    "binary_sensor.master_bedroom_door_magnet_sensor":                                               BinarySensorSensor;
    "sensor.aqara_temperature_and_humidity_sensor_temperature_humidity_sensor_temperature":          SensorTempAndHumidity;
    "binary_sensor.motion_sensor_upstairs_motion_sensor":                                            BinarySensorSensor;
    "binary_sensor.motion_sensor_kitchen_motion_sensor":                                             BinarySensorSensor;
    "binary_sensor.water_leak_sensor_hwr_submersion_sensor":                                         BinarySensorSensor;
    "sensor.motion_sensor_floor_downstairs_motion_sensor_illumination":                              SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureClass;
    "sensor.gateway_motion_sensor_illumination":                                                     SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureClass;
    "sensor.aqara_temperature_and_humidity_sensor_temperature_humidity_sensor_relative_humidity":    SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureClass;
    "sensor.aqara_temperature_and_humidity_sensor_temperature_humidity_sensor_atmospheric_pressure": SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureClass;
    "persistent_notification.config_entry_discovery":                                                PersistentNotificationConfigEntryDiscovery;
    "sensor.netatmo_my_home_weather_station_co2":                                                    SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_humidity":                                               SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_noise":                                                  SensorHacsClass;
    "sensor.netatmo_my_home_weather_station_pressure":                                               SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_outdoor_module_temperature":                             SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_outdoor_module_humidity":                                SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_outdoor_module_battery_percent":                         SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_smart_anemometer_direction":                             SensorNetatmoMyHomeWeatherStationSmartAnemometerDirection;
    "sensor.netatmo_my_home_weather_station_smart_anemometer_wind_strength":                         SensorHacsClass;
    "sensor.netatmo_my_home_weather_station_smart_anemometer_battery_percent":                       SensorNetatmoMyHomeWeatherStation;
    "sensor.netatmo_my_home_weather_station_temperature":                                            SensorNetatmoMyHomeWeatherStation;
}

export interface Script {
    entity_id:    string;
    state:        State;
    attributes:   PurpleAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface PurpleAttributes {
    last_triggered: null | string;
    mode:           Mode;
    current:        number;
    id?:            string;
    friendly_name:  string;
    icon?:          string;
}

export enum Mode {
    Single = "single",
}

export interface Context {
    id:        string;
    parent_id: null | string;
    user_id:   null | string;
}

export enum State {
    Off = "off",
    On = "on",
}

export interface BinarySensorSensor {
    entity_id:    string;
    state:        string;
    attributes:   BinarySensorDoorAndWindowSensorMagnetSensorAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface BinarySensorDoorAndWindowSensorMagnetSensorAttributes {
    model:                          string;
    lan_ip:                         string;
    mac_address:                    string;
    firmware_version:               string;
    hardware_version:               string;
    entity_class:                   string;
    miot_type:                      string;
    state_property:                 null | string;
    "magnet_sensor.contact_state"?: boolean;
    state_updater:                  string;
    trigger_type:                   string;
    trigger_time:                   number;
    trigger_at:                     string;
    friendly_name:                  string;
    supported_features:             number;
    device_class:                   string;
    "motion_sensor.motion_state"?:  boolean;
    "motion_sensor.illumination"?:  number;
    sub_entities?:                  string[];
}

export interface BinarySensorGatewayMotionSensor {
    entity_id:    string;
    state:        string;
    attributes:   BinarySensorGatewayMotionSensorAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface BinarySensorGatewayMotionSensorAttributes {
    model:                        string;
    lan_ip:                       string;
    mac_address:                  string;
    firmware_version:             string;
    hardware_version:             string;
    entity_class:                 string;
    miot_type:                    string;
    state_property?:              null;
    "motion_sensor.illumination": number;
    "light.on":                   boolean;
    alarm:                        boolean;
    "alarm.volume":               number;
    "gateway.guard_mode":         boolean;
    state_updater:                string;
    sub_entities?:                string[];
    friendly_name:                string;
    supported_features:           number;
    device_class?:                string;
    supported_color_modes?:       string[];
}

export interface BinarySensorUpdater {
    entity_id:    string;
    state:        State;
    attributes:   BinarySensorUpdaterAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface BinarySensorUpdaterAttributes {
    release_notes:  string;
    newest_version: string;
    friendly_name:  string;
}

export interface FanHumidifier {
    entity_id:    string;
    state:        string;
    attributes:   FanHumidifierAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface FanHumidifierAttributes {
    preset_modes?:          string[];
    friendly_name:          string;
    supported_features:     number;
    Room:                   string;
    type:                   string;
    supported_color_modes?: string[];
    fan_speed_list?:        any[];
}

export interface HumidifierMiSmartAntibacterialHumidifierHumidifier {
    entity_id:    string;
    state:        State;
    attributes:   HumidifierMiSmartAntibacterialHumidifierHumidifierAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface HumidifierMiSmartAntibacterialHumidifierHumidifierAttributes {
    min_humidity:                          null;
    max_humidity:                          null;
    model:                                 string;
    lan_ip:                                string;
    mac_address:                           string;
    firmware_version:                      string;
    hardware_version:                      string;
    entity_class:                          string;
    miot_type:                             string;
    "humidifier.on.error":                 string;
    "alarm.error":                         string;
    "indicator_light.on.error":            string;
    "environment.relative_humidity.error": string;
    "environment.temperature.error":       string;
    state_updater:                         string;
    friendly_name:                         string;
    supported_features:                    number;
    device_class:                          string;
}

export interface InputBooleanMovieMode {
    entity_id:    string;
    state:        State;
    attributes:   InputBooleanMovieModeAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface InputBooleanMovieModeAttributes {
    editable:      boolean;
    friendly_name: string;
}

export interface MediaPlayerAppleTv {
    entity_id:    string;
    state:        string;
    attributes:   MediaPlayerAppleTvAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface MediaPlayerAppleTvAttributes {
    app_id:             string;
    app_name:           string;
    friendly_name:      string;
    supported_features: number;
}

export interface MediaPlayerBathroom {
    entity_id:    string;
    state:        string;
    attributes:   MediaPlayerBathroomAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface MediaPlayerBathroomAttributes {
    volume_level:              number;
    is_volume_muted:           boolean;
    media_content_id:          string;
    media_content_type:        string;
    media_duration:            number;
    media_position:            number;
    media_position_updated_at: string;
    media_title:               string;
    media_artist:              string;
    media_album_name:          string;
    shuffle:                   boolean;
    repeat:                    State;
    sonos_group:               string[];
    queue_position:            number;
    friendly_name:             string;
    entity_picture:            string;
    supported_features:        number;
}

export interface MediaPlayer {
    entity_id:    string;
    state:        string;
    attributes:   MediaPlayerDiningRoomAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface MediaPlayerDiningRoomAttributes {
    volume_level:       number;
    is_volume_muted:    boolean;
    media_content_type: string;
    shuffle:            boolean;
    repeat:             State;
    sonos_group:        string[];
    friendly_name:      string;
    supported_features: number;
}

export interface PersistentNotificationConfigEntryDiscovery {
    entity_id:    string;
    state:        string;
    attributes:   PersistentNotificationConfigEntryDiscoveryAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface PersistentNotificationConfigEntryDiscoveryAttributes {
    title:         string;
    friendly_name: string;
    message:       string;
}

export interface PersonRaik {
    entity_id:    string;
    state:        string;
    attributes:   PersonRaikAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface PersonRaikAttributes {
    editable:      boolean;
    id:            string;
    user_id:       string;
    friendly_name: string;
}

export interface RemoteBroadlinkRm3ProRemote {
    entity_id:    string;
    state:        string;
    attributes:   RemoteBroadlinkRm3ProRemoteAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface RemoteBroadlinkRm3ProRemoteAttributes {
    restored:           boolean;
    supported_features: number;
    friendly_name:      string;
}

export interface RemoteLivingRoom {
    entity_id:    string;
    state:        State;
    attributes:   RemoteLivingRoomAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface RemoteLivingRoomAttributes {
    friendly_name:      string;
    supported_features: number;
}

export interface SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureClass {
    entity_id:    string;
    state:        string;
    attributes:   SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorAqaraTemperatureAndHumiditySensorTemperatureHumiditySensorAtmosphericPressureAttributes {
    "atmospheric_pressure-2-3"?:   number;
    parent_entity_id:              string;
    unit_of_measurement:           string;
    friendly_name:                 string;
    supported_features:            number;
    device_class:                  string;
    "relative_humidity-2-2"?:      number;
    "motion_sensor.illumination"?: number;
}

export interface SensorTempAndHumidity {
    entity_id:    string;
    state:        string;
    attributes:   SensorTempAndHumidityAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorTempAndHumidityAttributes {
    model:                      string;
    lan_ip:                     string;
    mac_address:                string;
    firmware_version:           string;
    hardware_version:           string;
    entity_class:               string;
    miot_type:                  string;
    state_property:             string;
    "temperature-2-1":          number;
    "relative_humidity-2-2":    number;
    "atmospheric_pressure-2-3": number;
    state_updater:              string;
    sub_entities:               string[];
    friendly_name:              string;
    supported_features:         number;
}

export interface SensorConnectedClients {
    entity_id:    string;
    state:        string;
    attributes:   SensorConnectedClientsAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorConnectedClientsAttributes {
    unit_of_measurement: string;
    friendly_name:       string;
}

export interface SensorHacsClass {
    entity_id:    string;
    state:        string;
    attributes:   SensorHacsAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorHacsAttributes {
    repositories?:       Repository[];
    unit_of_measurement: string;
    friendly_name:       string;
    icon:                string;
}

export interface Repository {
    name:              string;
    display_name:      string;
    installed_version: string;
    available_version: string;
}

export interface SensorLinksys {
    entity_id:    string;
    state:        string;
    attributes:   SensorLinksysBReceivedAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorLinksysBReceivedAttributes {
    restored:            boolean;
    supported_features:  number;
    unit_of_measurement: string;
    friendly_name:       string;
    icon:                string;
}

export interface SensorNetatmoMyHomeWeatherStation {
    entity_id:    string;
    state:        string;
    attributes:   SensorNetatmoMyHomeWeatherStationCo2Attributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorNetatmoMyHomeWeatherStationCo2Attributes {
    unit_of_measurement: string;
    friendly_name:       string;
    device_class:        string;
}

export interface SensorNetatmoMyHomeWeatherStationSmartAnemometerDirection {
    entity_id:    string;
    state:        string;
    attributes:   SensorNetatmoMyHomeWeatherStationSmartAnemometerDirectionAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SensorNetatmoMyHomeWeatherStationSmartAnemometerDirectionAttributes {
    friendly_name: string;
    icon:          string;
}

export interface SunSun {
    entity_id:    string;
    state:        string;
    attributes:   SunSunAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface SunSunAttributes {
    next_dawn:     string;
    next_dusk:     string;
    next_midnight: string;
    next_noon:     string;
    next_rising:   string;
    next_setting:  string;
    elevation:     number;
    azimuth:       number;
    rising:        boolean;
    friendly_name: string;
}

export interface Switch {
    entity_id:    string;
    state:        string;
    attributes:   Switch76B910A45052Add2G9KlAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface Switch76B910A45052Add2G9KlAttributes {
    friendly_name: string;
}

export interface WeatherHome {
    entity_id:    string;
    state:        string;
    attributes:   WeatherHomeAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface WeatherHomeAttributes {
    temperature:   number;
    humidity:      number;
    pressure:      number;
    wind_bearing:  number;
    wind_speed:    number;
    attribution:   string;
    forecast:      Forecast[];
    friendly_name: string;
}

export interface Forecast {
    condition:     string;
    precipitation: number;
    temperature:   number;
    templow:       number;
    datetime:      string;
    wind_bearing:  number;
    wind_speed:    number;
}

export interface ZoneHome {
    entity_id:    string;
    state:        string;
    attributes:   ZoneHomeAttributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface ZoneHomeAttributes {
    latitude:      number;
    longitude:     number;
    radius:        number;
    passive:       boolean;
    editable:      boolean;
    friendly_name: string;
    icon:          string;
}


// Generated by https://quicktype.io

export interface Sensor {
    entity_id:    string;
    state:        string;
    attributes:   Attributes;
    last_changed: string;
    last_updated: string;
    context:      Context;
}

export interface Attributes {
    unit_of_measurement: string;
    friendly_name:       string;
    sensor_class:        string;
    device_class:        string;
    Room:                string;
    type:                string;
}


